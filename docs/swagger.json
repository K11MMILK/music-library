{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Music-library Application",
        "title": "Music-Library",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "paths": {
        "/api/song/": {
            "get": {
                "description": "Get all songs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "GetAllSongs",
                "operationId": "getAllSongs",
                "responses": {
                    "200": {
                        "description": "Returns a list of all songs",
                        "schema": {
                            "$ref": "#/definitions/handler.getAllSongsResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get all songs",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "CreateSong",
                "operationId": "create-song",
                "parameters": [
                    {
                        "description": "Song information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/musiclibrary.CreateSongInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns song ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create song",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/song/filter": {
            "get": {
                "description": "Get songs with filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "GetSongsWithFilter",
                "operationId": "getSongsWithFilter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group filter",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Song filter",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.getAllSongsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/song/{id}": {
            "put": {
                "description": "Update an existing song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "UpdateSong",
                "operationId": "update-song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Song information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/musiclibrary.UpdateSongInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns status of the operation",
                        "schema": {
                            "$ref": "#/definitions/handler.statusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update song",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "DeleteSong",
                "operationId": "delete-song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns status of the operation",
                        "schema": {
                            "$ref": "#/definitions/handler.statusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid song ID",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete song",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/songDetails/{id}": {
            "get": {
                "description": "Get song details by song ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songDetails"
                ],
                "summary": "GetSongDetailsById",
                "operationId": "get-songDetails-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song details data",
                        "schema": {
                            "$ref": "#/definitions/handler.songDetailsByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid song ID",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get song details",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update song details by songDetails ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songDetails"
                ],
                "summary": "UpdateSongDetails",
                "operationId": "update-songDetails",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SongDetails ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SongDetails info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/musiclibrary.UpdateSongDetailsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status of the operation",
                        "schema": {
                            "$ref": "#/definitions/handler.statusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or ID",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "SongDetails not found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update song details",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/songText/{id}/filter": {
            "get": {
                "description": "Get song text with pagination by song ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songDetails"
                ],
                "summary": "GetSongText",
                "operationId": "get-song-text",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SongDetails ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit of verses per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song text with pagination",
                        "schema": {
                            "$ref": "#/definitions/handler.songTextResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid songDetails ID or pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get songDetails",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.getAllSongsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/musiclibrary.Song"
                    }
                }
            }
        },
        "handler.songDetailsByIdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/musiclibrary.SongDetailsDL"
                    }
                }
            }
        },
        "handler.songTextResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.statusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "musiclibrary.CreateSongInput": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Metallica"
                },
                "song": {
                    "type": "string",
                    "example": "Enter Sandman"
                }
            }
        },
        "musiclibrary.Song": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "musiclibrary.SongDetailsDL": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "songId": {
                    "type": "integer"
                }
            }
        },
        "musiclibrary.UpdateSongDetailsInput": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "https://example.com/song"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "2024-01-01"
                },
                "text": {
                    "type": "string",
                    "example": "Song lyrics here"
                }
            }
        },
        "musiclibrary.UpdateSongInput": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string",
                    "example": "Metallica"
                },
                "song": {
                    "type": "string",
                    "example": "Enter Sandman"
                }
            }
        }
    }
}